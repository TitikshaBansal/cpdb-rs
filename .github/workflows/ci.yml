name: CI

on:
  push:
  pull_request:

jobs:
  build-ubuntu:
    name: Build (ubuntu-latest)
    runs-on: ubuntu-latest
    env:
      CARGO_TERM_COLOR: always
      CPDB_LINK_BACKEND: "0"
    steps:
      - uses: actions/checkout@v4

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            build-essential pkg-config autoconf automake libtool libtool-bin gettext autopoint \
            libglib2.0-dev libdbus-1-dev \
            libcups2-dev cups \
            libavahi-common-dev libavahi-client-dev \
            git curl

      - name: Build and install cpdb-libs
        run: |
          git clone --depth=1 https://github.com/OpenPrinting/cpdb-libs.git ~/cpdb-libs
          cd ~/cpdb-libs
          ./autogen.sh || autoreconf -fi
          ./configure --prefix=/usr
          make -j"$(nproc)"
          sudo make install
          sudo ldconfig

      - name: Provide headers path for bindgen
        run: echo "CPDB_LIBS_PATH=$HOME/cpdb-libs" >> $GITHUB_ENV

      - name: Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Cargo cache
        uses: Swatinem/rust-cache@v2

      - name: Build (all targets)
        run: cargo build --all-targets --verbose

      - name: Run tests
        run: cargo test --all --verbose -- --nocapture

      - name: Build examples
        run: cargo build --examples --verbose

  docs:
    name: Documentation
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - name: Install headers for bindgen
        run: |
          sudo apt-get update
          sudo apt-get install -y libglib2.0-dev build-essential pkg-config autoconf automake libtool libtool-bin gettext autopoint
      - name: Build and install cpdb-libs (for headers)
        run: |
          git clone --depth=1 https://github.com/OpenPrinting/cpdb-libs.git ~/cpdb-libs
          cd ~/cpdb-libs
          ./autogen.sh || autoreconf -fi
          ./configure --prefix=/usr
          make -j"$(nproc)"
          sudo make install
          sudo ldconfig
          cd -
          echo "CPDB_LIBS_PATH=$HOME/cpdb-libs" >> $GITHUB_ENV
      - name: Docs
        env:
          RUSTDOCFLAGS: -D warnings
        run: cargo doc --no-deps -p cpdb-rs

  audit:
    name: Security Audit
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - name: Install cargo-audit
        run: cargo install cargo-audit --locked
      - name: Run audit
        run: cargo audit

  build-macos:
    name: Build (macos-latest)
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - name: Install dependencies
        run: |
          brew update
          brew install autoconf automake libtool gettext pkg-config glib || true
          # Ensure autopoint (from gettext) is on PATH for autoreconf
          echo "/opt/homebrew/opt/gettext/bin" >> $GITHUB_PATH || true
          echo "/usr/local/opt/gettext/bin" >> $GITHUB_PATH || true
      - name: Prepare cpdb-libs headers for bindgen
        run: |
          git clone --depth=1 https://github.com/OpenPrinting/cpdb-libs.git ~/cpdb-libs
          cd ~/cpdb-libs
          ./autogen.sh || autoreconf -fi
          ./configure --prefix=/usr/local
          make -j"$(sysctl -n hw.ncpu)" libcpdb.la
          cd -
          echo "CPDB_LIBS_PATH=$HOME/cpdb-libs" >> $GITHUB_ENV
      - name: Build library only
        env:
          CPATH: ${{ env.HOME }}/cpdb-libs:${{ env.HOME }}/cpdb-libs/cpdb
          C_INCLUDE_PATH: ${{ env.HOME }}/cpdb-libs:${{ env.HOME }}/cpdb-libs/cpdb
          BINDGEN_EXTRA_CLANG_ARGS: -I${{ env.HOME }}/cpdb-libs -I${{ env.HOME }}/cpdb-libs/cpdb
        run: |
          echo "Using CPATH=$CPATH"
          echo "Using BINDGEN_EXTRA_CLANG_ARGS=$BINDGEN_EXTRA_CLANG_ARGS"
          cargo build --lib --verbose
      # Skip docs on macOS to avoid bindgen header requirements
